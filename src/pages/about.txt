Normal cards with same height and width

import React, { useState } from 'react';
import './Gallery.css';

const GalleryCard = ({ image, description }) => {
  const [isHovered, setIsHovered] = useState(false);

  const handleMouseEnter = () => {
    setIsHovered(true);
  };

  const handleMouseLeave = () => {
    setIsHovered(false);
  };

  return (
    <div
      className={`gallery-card ${isHovered ? 'hovered' : ''}`}
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
    >
      <img src={image} alt="Gallery" className="gallery-image" />
      {isHovered && <div className="gallery-description">{description}</div>}
    </div>
  );
};

const Gallery = () => {
  const galleryData = [
    {
      image: 'image1.jpg',
      description: 'Description 1',
    },
    {
      image: 'image2.jpg',
      description: 'Description 2',
    },
    {
      image: 'image3.jpg',
      description: 'Description 3',
    },
  ];

  return (
    <div className="gallery-container">
      {galleryData.map((data, index) => (
        <GalleryCard
          key={index}
          image={data.image}
          description={data.description}
        />
      ))}
    </div>
  );
};

export default Gallery;






.gallery-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.gallery-card {
  position: relative;
  margin: 10px;
  width: 250px;
  height: 250px;
  overflow: hidden;
  transition: all 0.3s ease;
}

.gallery-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: all 0.3s ease;
}

.gallery-card.hovered .gallery-image {
  transform: scale(0.8);
}

.gallery-description {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 10px;
  background-color: rgba(0, 0, 0, 0.7);
  color: #fff;
  font-size: 14px;
  opacity: 0;
  transition: all 0.3s ease;
}

.gallery-card.hovered .gallery-description {
  opacity: 1;
}
